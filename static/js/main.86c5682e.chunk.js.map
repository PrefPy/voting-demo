{"version":3,"sources":["components/footer/Footer.js","components/inputslider/InputSlider.js","components/startform/StartForm.js","components/tutorialsection/TutorialSection.js","components/simresult/SimResult.js","components/applyruleresult/ApplyRuleResult.js","components/simuoutput/SimuOutput.js","pages/startpage/StartPage.js","components/adminsettings/adminsettings.js","App.js","components/loadspinner/LoadSpinner.js","index.js"],"names":["Footer","className","target","href","rel","InputSlider","props","useState","value","val","setVal","update","v","onChange","span","name","min","max","step","allinputs","type","inputs","field","label","info","required","detail","Title","Typography","Text","StartForm","undefined","setSimuInput","simuInput","setTraditional","makedom","inp","Group","vals","map","Button","level","layout","initialValues","labelCol","wrapperCol","style","width","labelAlign","onFinish","onSubmit","group","i","Item","rules","message","tooltip","length","justify","align","marginBottom","placement","title","htmlType","onClick","TutorialSection","expandAbstract","expandIntro","state","setState","textAlign","parseRemark","rawtext","lines","split","l","push","SimResult","resultData","tabledata","columns","col","uuid","rows","row","box","showRemark","strong","remark","ApplyRuleResult","result","showModal","setstate","modalOptions","footer","onCancel","visible","trackPromise","axios","post","settings","server","learned_models","then","res","data","onError","SimuOutput","privacy_vals","output","o","privacy","applyresult","showResult","options","e","optionType","buttonStyle","StartPage","showError","outputType","errorModalOptions","console","log","display","setOutputType","App","setSettings","LoadSpinner","usePromiseTracker","promiseInProgress","color","height","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.86c5682e.chunk.js","sourcesContent":["import './Footer.css'\n\nexport default function Footer() {\n    return(\n        <div className=\"Footer\">\n            <div>\n                Built by: Prof. <a target=\"_blank\" href=\"http://cs.rpi.edu/~xial\" rel=\"noopener noreferrer\">Lirong Xia</a>'s Group\n            </div>\n            <div>\n                <a target=\"_blank\" href=\"https://icons8.com/icon/KwJ_oShFEoN7/elections\" rel=\"noopener noreferrer\">Elections</a> icon by <a target=\"_blank\" href=\"https://icons8.com\" rel=\"noopener noreferrer\">Icons8</a>\n            </div>\n        </div>\n    )\n}","import { useState } from 'react';\nimport { Row, Col, Slider, InputNumber } from 'antd';\n\nconst InputSlider = props => {\n    const [val,setVal] = useState(props.value)\n\n    const update = v =>{\n        props.onChange(v)\n        setVal(v)\n    }   \n    return(\n        <Row>\n            <Col span={12}>\n                <Slider \n                    name={props.name}\n                    min={props.min} \n                    max={props.max} \n                    step={props.step} \n                    value={val} \n                    onChange={update}/>\n            </Col>\n            <Col span={5}>\n                <InputNumber \n                    name={props.name}\n                    min={props.min} \n                    max={props.max} \n                    step={props.step} \n                    value={val} \n                    onChange={update}/>\n            </Col>\n        </Row>\n    )\n}\n\nexport default InputSlider","import './StartForm.css';\nimport { Input, Form, Radio, Button, Row, Typography,Col,Tooltip } from 'antd';\nimport InputSlider from '../inputslider/InputSlider';\nimport { useState } from 'react';\n\n\nconst allinputs = [\n    {\n        type: 'Voting scenario',\n        inputs:[{   \n            field: 'no_candidates',  \n            label: 'Number of Candidates',               \n            info: 'Different number of candidates will lead to design of different voting rules',\n            required:true,\n            detail: {\n                type: 'slider',\n                min: 2,\n                max: 4,\n                step: 1\n            }\n        }, {\n            field: 'group_ratio',\n            label: 'Group Ratio',\n            info: 'Group fairness is computed in terms of group sizes, please enter ratio between the sizes of two groups as (smaller group size)/(larger group size)',\n            required:true,\n            detail: {\n                type: 'slider',\n                min: 0.01,\n                max: 1,\n                step: 0.01\n            }\n        }]}, {\n        type: 'Desired property levels',\n        inputs:[{\n            field: 'gr_fair_req',\n            label: 'Group Fairness Requirement',\n            info: 'Real number between 0~1. Average group-imbalance based fairness value. Calculated using average rank utility of both groups. Higher value means more fairness.',\n            required:false,\n            detail: {\n                type: 'slider',\n                min: 0.01,\n                max: 1.00,\n                step: 0.01\n            }\n        }, {\n            field: 'conc_eff_req',\n            label: 'Condorcet Efficiency Requirement',\n            info: 'Real number between 0~1. Fraction of preference profiles where Condorcet winner is chosen if it exists. Higher value means more probability of choosing the Condorcet winner.',\n            required: false,\n            detail: {\n                type: 'slider',\n                min: 0.01,\n                max: 1.00,\n                step: 0.01\n            }\n        }, {\n            field: 'consistency',\n            label: 'Consistency Requirement',\n            info: 'Real number between 0~1. Higher value means higher probability that the voting rule will satisfy the consistency property',\n            required: false,\n            detail: {\n                type: 'slider',\n                min: 0.01,\n                max: 1.00,\n                step: 0.01\n            }\n        },{\n            field: 'monotonicity',\n            label: 'Monotonicity Requirement',\n            info: 'Real number between 0~1. Higher value means higher probability that the voting rule will satisfy the monotonicity property',\n            required: false,\n            detail: {\n                type: 'slider',\n                min: 0.01,\n                max: 1.00,\n                step: 0.01\n            }\n        },\n        // {\n        //     field: 'neutrality',\n        //     label: 'Neutrality Requirement',\n        //     info: 'Real number between 0~1. Higher value means higher probability that the voting rule will satisfy the neutrality property.',\n        //     required: false,\n        //     detail: {\n        //         type: 'slider',\n        //         min: 0.01,\n        //         max: 1.00,\n        //         step: 0.01\n        //     }\n        // }, \n        //  {\n        //     field: 'privacy_req',\n        //     label: 'Privacy Requirement',\n        //     info: 'To design a locally differential private mechanism, noise is added to each voter’s vote. High privacy requirement causes higher noise, low privacy requirement causes lower noise.',\n        //     required: false,\n        //     detail:{\n        //         type: 'radio',\n        //         vals: ['low','mid','high']\n        //     }\n        // }\n        // ,{\n        //     field: 'sim_runtime',\n        //     label: 'Learned rule accuracy',\n        //     info: 'Determines the size of the synthetic dataset created to learn new rules. Low accuracy corresponds to smaller dataset and fast runtime. High accuracy corresponds to larger dataset and slower runtime.',\n        //     required: false,\n        //     detail: {\n        //         type: 'radio',\n        //         vals: ['short','mid','long']\n        //     },\n        // }\n        ]}\n]\n\nconst {Text,Title} = Typography\n\nconst StartForm = props => {\n    const update = (value,field) => {\n        if(value.target !== undefined)\n            value = value.target.value\n        \n        props.setSimuInput({...props.simuInput, [field]:value})\n        // console.log(props.simuInput)\n    }\n\n    const setTraditional = () => {\n        props.setSimuInput({...props.simuInput, 'output-type':'traditional'})\n    }\n\n    const setLearnedRules = () => {\n        props.setSimuInput({...props.simuInput, 'output-type':'learned'})\n    }\n\n    const makedom = inp => {  \n        switch(inp.detail.type){\n            case 'slider':\n                return(\n                    <InputSlider \n                        name={inp.field} \n                        min={inp.detail.min} \n                        max={inp.detail.max}\n                        step={inp.detail.step}\n                        onChange={v => update(v,inp.field)}/>\n                )\n            case 'radio':\n                return(\n                    <Radio.Group name={inp.field} onChange={v =>update(v,inp.field)}>\n                        {inp.detail.vals.map(val=>(\n                            <Radio.Button value={val} key={val}>{val}</Radio.Button>\n                        ))}\n                    </Radio.Group>\n                )  \n            default: return(null)\n        }\n    }\n    \n    return(\n        <div className=\"StartForm\">\n            <Title level={3}>Designing Voting Rules</Title>\n            <div className=\"instruction\">\n                Choose required property for new voting rules (<star>*</star> marked fields are required)\n            </div>\n            <Form\n                layout=\"horizontal\"\n                initialValues={props.simuInput}\n                labelCol={{span:12}}\n                wrapperCol={{span:20}}\n                style={{width:\"90%\"}}\n                labelAlign=\"left\"\n                onFinish={props.onSubmit}\n                >\n                {\n                    allinputs.map((group,i) => (\n                        <div className=\"inputgroup\">\n                            <div className=\"title\">{group.type}</div>\n                            {group.inputs.map(inp=>\n                                <Form.Item \n                                    label={inp.label} \n                                    name={inp.field} \n                                    key={inp.field}\n                                    rules={inp.required ? [{required:true, message:'Please input a value!'}] : []}\n                                    tooltip={inp.info}>\n                                    {makedom(inp)}\n                                </Form.Item>)}\n                            {i === allinputs.length-1 ?\n                            <Row type=\"flex\" justify=\"center\" align=\"middle\" \n                            style={{marginBottom:10}}\n                            >\n                                <Tooltip\n                                    placement='right'\n                                    title='Check the outcome under traditional voting rules, such as Borda, Copeland and maximin'\n                                >\n                                    <Button \n                                        type=\"primary\"\n                                        htmlType=\"submit\"\n                                        onClick={setTraditional}>\n                                            Check existing voting rules\n                                    </Button>\n                                </Tooltip>\n                            </Row>\n                            :\n                                <></>\n                            }\n                        </div>\n                    \n                    ))\n                }\n                <Row type=\"flex\" justify=\"center\" align=\"middle\" style={{marginBottom:10}}>\n                    <Button type=\"primary\" htmlType=\"submit\" onClick={setLearnedRules}>Generate Voting Rule</Button>\n                </Row>\n            </Form>\n        </div>\n    )\n}\n\n\nexport default StartForm","import './TutorialSection.css'\nimport { Button } from 'antd'\nimport { useState } from 'react'\n\nconst TutorialSection = () => {\n    const [state,setState] = useState({expandAbstract:false,expandIntro:true})\n\n    const toggleAbstract = () =>{setState({...state,expandAbstract:!state.expandAbstract})}\n    const toggleIntro = () => {setState({...state,expandIntro:!state.expandIntro})}\n\n    return(\n        <div className='TutorialSection'>\n            <div className={`intro-body ${state.expandIntro ? 'expanded' : 'collapsed'}`}>\n                <h1 style={{textAlign:'center'}}><b>MLVR</b> - Machine Learning based design of Voting Rules</h1>\n                <div className=\"main-content\">\n                    <h3><b>Introduction</b></h3>\nVoting is the most popular method of making a collective decision from individual (and often contradictory) preference of agents. Many different voting rules are developed for this purpose. Various axioms have been defined in classic social choice literature to measure goodness of a voting rule, such as Condorcet efficiency, monotonicity, anonymity etc [1]. On the other hand, in modern times new properties are also considered important for the decision-making domain such as group fairness, privacy etc. It has been shown that many of these properties are inherently incompatible with each other (e.g.,[2, 3, 4]), thus leading to a trade-off. We propose a machine learning-based method for designing new voting rules at different levels of trade-offs between these properties.<br/>\nThe notion of group fairness we use is group-imbalance based fairness [4] and calculates average-case fairness of a voting rule for two groups of different sizes. The notion of privacy we use is local differential privacy [5] and we show the performance of voting rules at different levels of privacy requirement.<br/>\n                    \n                    <a className='vidlink' target='_blank' href='https://www.youtube.com/watch?v=7wMiABG3b84'>Link to video</a>\n                    <div className=\"references\">\n                        <b>References</b>\n                        <br/>\n[1] Felix Brandt, Vincent Conitzer, Ulle Endriss, J´erome Lang, and Ariel D Procaccia. Handbook of computational social choice. Cambridge University Press, 2016<br/>\n[2] Gil Kalai. A Fourier-theoretic perspective on the Condorcet paradox and Arrow’s theorem. Advances in Applied Mathematics, 29(3):412—426, 2002.<br/>\n[3] Ehud Friedgut, Gil Kalai, Nathan Keller, and Noam Nisan. A quantitative version of the gibbard–satterthwaite theorem for three alternatives. SIAM Journal on Computing, 40(3):934–952, 2011.<br/>\n[4] Farhad Mohsin, Ao Liu, Pin-Yu Chen, Francesca Rossi, and Lirong Xia. Learning to Design Fair and Private Voting Rules.\", AI For Social Good Workshop (AI4SG), 30th International Joint Conference on Artificial Intelligence (IJCAI-21), 2021.<br/>\n[5] Alexandre Evfimievski, Johannes Gehrke, and Ramakrishnan Srikant. Limiting privacy breaches in privacy preserving data mining. In Proceedings of the twenty-second ACM SIGMOD-SIGACT-SIGART symposium on Principles of database systems, pages 211–222. ACM, 2003.<br/>\n                    </div>\n                </div>\n                <Button onClick={toggleIntro} type=\"link\">\n                    {state.expandIntro ? 'Minimize introduction' : 'Expand introduction'}\n                </Button>\n                    \n            </div>\n\n            <div className={`intro-detail ${state.expandAbstract ? 'expanded' : 'collapsed'}`}>\n                <Button onClick={toggleAbstract} type=\"link\">\n                    {state.expandAbstract ? 'Minimize instructions' : 'Expand full instructions'}\n                </Button>\n                <div \n                    // style={{display:state.expandAbstract ? 'block' : 'none'}} \n                    className=\"abstract-body\">\nThe user must define the voting scenario with the number of candidates in the voting system and the size ratio between two pre-defined groups among the voters. The group ratio definition is necessary for the group fairness considerations.<br/>\n{/* <br/> */}\nAdditionally, the user can define different requirement level for various properties.<br/>\n{/* <br/> */}\nClicking \"Check existing voting rules\" will show average values of the different properties for traditional voting rules Copeland, Maximin and Borda.\nAfter inputting different property requirements (can choose a subset of properties), clicking Generate Voting Rule will use our learning based method to design a voting rule that tries to satisfy the requirements. If no such voting rule can be designed (because of impossibility results), the best closest rule will be generated.<br/>\n{/* <br/> */}\nAfter new voting rules are generated, the user can apply the newly designed voting rule on any new voting profile.\n                    {/* <div className=\"references\">\n                        <b>References:</b>\n                        [1] Mohsin, F., Liu, A., Chen, P.Y., Rossi, F., and Xia, L. <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://drive.google.com/file/d/12bb5i_T9TtOEgyOvQlSk5KmWu2JNdRAi/view?usp=sharing\" >\"Learning to Design Fair and Private Voting Rules.\"</a>, To be presented at the AI For Social Good Workshop (AI4SG), 30th International Joint Conference on Artificial Intelligence (IJCAI-21). 2021.\n                    </div> */}\n                </div>                \n            </div>\n            {/* <Button className=\"hidetutorial\" type=\"link\" onClick={setHideIntro}><CaretUpOutlined style={{fontSize:'200%'}}/></Button> */}\n        </div>\n    )\n}\n\nexport default TutorialSection","import './SimResult.css';\nimport 'antd/dist/antd.css';\nimport { Typography } from 'antd';\nimport { uuid } from 'uuidv4'\n\nconst { Text,Title } = Typography\n\nconst parseRemark = rawtext => {\n\tlet lines = []\n\tfor(let l of rawtext.split('\\n')){\n\t\tlines.push(l)\n\t\tlines.push(<br/>)\n\t}\n\treturn lines\n}\n\nconst SimResult = props => {\n\n\t// console.log(props.resultData)\n\treturn (\n\t\t// <>Sike!</>\n\t\t<div className=\"voting-result\">\n\t\t\t<table>\n\t\t\t\t<tbody>\n\t\t\t\t\t<tr className=\"theader\">\n\t\t\t\t\t\t{props.resultData.tabledata.columns.map(col=><th key={uuid()}>{col}</th>)}\n\t\t\t\t\t</tr>\n\t\t\t\t\t{ props.resultData.tabledata.rows.map(row=>(\n\t\t\t\t\t\t<tr key={ row[0] }>\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\trow.map(box => <td key={uuid()}>{ box }</td>)\t\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t))}\n\t\t\t\t</tbody>\n\t\t\t</table>\n\t\t\t{\n\t\t\t\tprops.showRemark !== undefined && !props.showRemark ?\n\t\t\t\t<></>\n\t\t\t\t:\n\t\t\t\t<div className=\"remark\">\n\t\t\t\t\t<Text strong={true}>Remark: </Text> \n\t\t\t\t\t<Text>\n\t\t\t\t\t{parseRemark(props.resultData.tabledata.remark)}\n\t\t\t\t\t</Text>\n\t\t\t\t</div>\n\t\t\t}\n\t\t</div>\n\t);\n}\n\nexport default SimResult","import { trackPromise } from 'react-promise-tracker'\nimport axios from 'axios'\nimport { useState } from 'react'\nimport { Upload, Select, Button, Checkbox, Col, Modal, Typography } from 'antd'\n\nimport SimResult from '../simresult/SimResult'\n\nconst {Text} = Typography\n\nconst ApplyRuleResult = props => {\n\n    const [state,setstate] = useState({result:{},showModal:false})\n\n    const modalOptions = {\n        title:'Simluation Result',\n        footer:null,\n        onCancel: () => {\n            // props.setPopupState({showPopup:false,data:''})\n            setstate({...state,showModal:false})\n        },\n        width:1000,\n        visible:state.showModal\n    }\n\n    const onApply = () => {\n        // console.log(`sending ${JSON.stringify(props.learned_models)}`)\n        // console.log(`${props.settings.server}/apply`)\n        trackPromise(\n                    axios.post(`${props.settings.server}/apply`,{\n                                    learned_models:props.learned_models\n                    }).then(res=>{\n                        // console.log('got this in  return')\n                        // console.log(res.data)\n                        if(res.data !== undefined){\n                            setstate({...state,result:res.data,showModal:true})\n                        }else{\n                            // console.log(res.data)\n                            props.onError()\n                        }\n\n                        //     props.history.push({pathname:'/result',state:{resultData:res.data, simuInput:simuInput}})\n                        // else\n                        //     setSimuInput({...simuInput,showError:true})\n                    })\n                )\n    }\n\n    return(\n        <>\n            <>\n                <Text style={{marginBottom:10}}>\n                    Click this button to view the results of the displayed voting rules with your own data!\n                </Text>\n                <Button onClick={onApply} >Apply Voting Rules</Button>\n            </>\n            <Modal {...modalOptions}>\n                {/* {props.popupState.data} */}\n                <SimResult resultData={state.result} />\n            </Modal>\n        </>\n    )\n}\n\nexport default ApplyRuleResult","import { useState } from 'react'\nimport { Typography, Radio, Button } from 'antd'\nimport ApplyRuleResult from '../applyruleresult/ApplyRuleResult'\nimport axios from 'axios'\n\nimport SimResult from '../simresult/SimResult.js'\nimport { trackPromise } from 'react-promise-tracker'\n\nimport './simuoutput.css'\n\nconst { Title, Text } = Typography\n\nconst names = {\n    'Traditional Rules': 'traditional',\n    'Learned Rules':'learned',\n}\n\nconst SimuOutput = props => {\n    const privacy_vals = props.output.map((o,i) => ({label:o.privacy,value:i}))\n\n    const [state, setstate] = useState({privacy:0,applyresult:{},showResult:false});\n\n    const onPrivacyChange = e => {\n        setstate({...state,privacy:e.target.value})\n    }\n   \n    return(\n        <div className=\"SimuOutput\">\n            <Title level={3}>Output</Title>\n            <Title level={5}>\n                {props.output ?\n                    props.output.length > 1 ? \n                        \"Values for different privacy values\"\n                        : \n                        \"Values for traditional voting rules\"\n                    :''}\n            </Title>\n            <div className=\"maincontent\">\n                <div className=\"choose-table\">\n                    {/* {props.output.length > 0 ?\n                        <Radio.Group\n                            options={Object.keys(names)}\n                            onChange={onRuleChange}\n                            value={state.ruledisplay}\n                            optionType=\"button\"\n                            buttonStyle=\"solid\"\n                            />:''} */}\n                    {privacy_vals.length > 1 ? \n                        <Radio.Group\n                            options={privacy_vals}\n                            onChange={onPrivacyChange}\n                            value={state.privacy}\n                            optionType=\"button\"\n                            buttonStyle=\"solid\"\n                            />:''}\n                </div>\n                { props.output.length > 0 ?\n                    <>\n                        <SimResult resultData={props.output[state.privacy]} showRemark={!(props.output && props.output.length === 1)}/>\n                        {privacy_vals.length > 1 ?\n                            // <ApplyRule learned_models={props.learned_models} simuInput={props.simuInput} style={{marginTop:20}}  onApply={onApply}/>\n                            <ApplyRuleResult learned_models={props.learned_models} settings={props.settings}/>\n                        :''}\n                    </>\n                    : \n                    <div className=\"startmessage\">\n                        <Text>\n                            No output generated yet.\n                            <br/>\n                            Click <b>Check existing voting rules</b> or <b>Generate new voting rule</b>!\n                        </Text>\n                    </div>\n                }\n            </div>\n            \n        </div>  \n    )\n}\n\nexport default SimuOutput;","import { useState } from 'react';\nimport axios from 'axios'\nimport { trackPromise } from 'react-promise-tracker'\n// import { server } from '../../App'\nimport { Modal } from 'antd'\n\nimport StartForm from '../../components/startform/StartForm'\nimport TutorialSection from '../../components/tutorialsection/TutorialSection'\nimport SimuOutput from '../../components/simuoutput/SimuOutput';\nimport AdminSettings from '../../components/adminsettings/adminsettings';\n\nimport './StartPage.css';\n\nconst resultData = {\n    'privacy': 'mid',\n    'tabledata':{\n        'columns': ['Voting Rule','Condorcet Efficiency','Group Fairness'],\n        'rows': {\n            'traditional': [\n                ['Copeland',    '1.00',     0.93],\n                ['Maximin',     '1.00',     0.82],\n                ['Borda',       0.92,     0.87],\n            ],\n            'learned': [\n                ['LVR1',        0.87,     0.98 ],\n                ['LVR2',        0.82,     0.93 ],\n            ],\n        },\n        'remark': 'Mid privacy results.\\n and a newline'\n    }\n}\n\nconst learned_models = [\n        {name: 'LVR1',\n        type:'xgboost',\n        xgboost_idx:''},\n        {name: 'LVR2',\n        type:'xgboost',\n        xgboost_idx:''}\n]\n\nconst StartPage = props => {\n    const [state,setState] = useState({showError:false,result:[],learned_models:[],outputType:'traditional'})\n\n    const setOutputType = val =>{\n        setState({...state,outputType:val})\n    }\n\n    const setSimuInput = data => {\n        setState({...state,simuInput:data})\n    }\n\n    const onError = () => {\n        setState({...state,showError:true})\n    }\n\n\n    const onSubmit = () => {\n        // console.log(`sending ${JSON.stringify(state.simuInput)}`)\n        // console.log(`${props.settings.server}/run_sim`)\n        \n        trackPromise(\n                    axios.post(`${props.settings.server}/run_sim`,state.simuInput).then(res=>{\n                        console.log('got this in  return')\n                        console.log(res.data.display)\n                        if(res.data.display !== undefined){\n                            setState({...state,result:res.data.display,learned_models:res.data.learned_models})\n                        }else{\n                            // console.log(res.data)\n                            onError()\n                        }\n\n                        //     props.history.push({pathname:'/result',state:{resultData:res.data, simuInput:simuInput}})\n                        // else\n                        //     setSimuInput({...simuInput,showError:true})\n                    })\n                )\n    }\n\n    const errorModalOptions = {\n        title:'Message',\n        footer:null,\n        onCancel: () => {\n            setState({...state,showError:false})\n        },\n        visible:state.showError\n    }\n\n    return(\n        <div className=\"StartPage\">\n            {/* <AdminSettings settings={props.settings} setSettings={props.setSettings} /> */}\n            <TutorialSection />\n            <div className=\"simulation-area\">\n                <StartForm onSubmit={onSubmit} simuInput={state.simuInput} setSimuInput={setSimuInput} setOutputType={setOutputType}/>\n                <SimuOutput simuInput={state.simuInput} output={state.result} learned_models={state.learned_models} onError={onError} settings={props.settings}/>\n            </div>\n            <Modal {...errorModalOptions}>\n                Something bad happened! Check server logs\n            </Modal>\n        </div>\n    )\n}\n\nexport default StartPage\n","import { Row,Col, Modal,Radio,Typography } from 'antd'\nimport { useState} from 'react'\n\nimport './adminsettings.css'\n\nconst { Text } = Typography\n\nconst AdminSettings = props => {\n    // const [modalState,setModalState] = useState({visible:true})\n    const [state,setstate] = useState({modalvisible:true,settings:props.settings})\n    const onChange = (key,e) => {\n        setstate({...state,settings:{...state.settings,[key]:e.target.value}})\n    }\n\n    const handleClose = () => {\n        props.setSettings(state.settings)\n        setstate({...state,modalvisible:false})\n    }\n\n    const serveroptions = [\n                            {\n                                label:'local',\n                                value:'http://localhost:5000/'\n                            },{\n                                label:'opra',\n                                value:'https://voting-demo-backend.herokuapp.com'\n                            }\n                        ]\n                        \n    \n    return(\n    <Modal title=\"Admin Settings\" visible={state.modalvisible} onCancel={handleClose} footer={null}>\n        <Row style={{ alignItems: \"center\" }}>\n            <Col span={8}>\n                <Text strong={true}>Choose a server</Text>\n            </Col>\n            <Col span={8}>\n                <Radio.Group\n                    options={serveroptions}\n                    onChange={e=>onChange('server',e)}\n                    value={state.settings.server}\n                    optionType=\"button\"\n                    buttonStyle=\"solid\"\n                />\n            </Col>\n        </Row>\n    </Modal>\n    )\n}\n\nexport default AdminSettings","import { useState } from 'react';\nimport Footer from './components/footer/Footer.js'\nimport StartPage from './pages/startpage/StartPage.js';\n// import { HashRouter as Router, Route, Switch } from \"react-router-dom\";\n\nimport 'antd/dist/antd.css';\n\nconst App = () => {\n\tconst [state, setstate] = useState({server:'https://voting-demo-backend.onrender.com'})\n\t// const [state, setstate] = useState({server:'http://127.0.0.1:5001/'})\n\treturn (\n\t\t<div>\n\t\t\t{/* <Router basename={process.env.PUBLIC_URL}>\n\t\t\t\t<Switch>\n\t\t\t\t\t<Route exact path=\"/result\" component={ResultPage} />\n\t\t\t\t\t<Route exact path=\"/\" component={StartPage} />\n\t\t\t\t</Switch>\n\t\t\t</Router> */}\n\t\t\t<StartPage settings={state} setSettings={setstate}/>\n\t\t\t<Footer />\n\t\t</div>\n\t);\n}\n\n// export const server = 'https://opra.cs.rpi.edu/polls/voting'\n\n// for local debugging\n// export const server = 'http://127.0.0.1:5001' \n\n// for heroku server\n// export const server = 'https://voting-demo-backend.herokuapp.com'\n\n\nexport default App","import { usePromiseTracker } from \"react-promise-tracker\";\nimport Loader from 'react-loader-spinner';\n\nimport './LoadSpinner.css'\n\nconst LoadSpinner = props => {\n  const { promiseInProgress } = usePromiseTracker()\n  return(\n    promiseInProgress && \n        <div className=\"LoadSpinner\">\n            <Loader type=\"ThreeDots\" color=\"#9ef3ec\" height=\"100\" width=\"200\"></Loader>\n        </div>\n  )\n}\n\nexport default LoadSpinner","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport LoadSpinner from './components/loadspinner/LoadSpinner'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n    <LoadSpinner />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}